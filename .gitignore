using System.Collections;
using System.Collections.Generic;
using TMPro;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.Rendering;
using UnityEngine.UIElements;

public class NewBehaviourScript : MonoBehaviour
{

    [SerializeField] float timePerNumber;
    [SerializeField] TMP_Text numberDisplayUI;
    [SerializeField] float elapsedTime = 0;
    [SerializeField] float currentNumber = 0;
    [SerializeField] TMP_Text targetNumberUI;
    [SerializeField] int targetNumber;
    [SerializeField] TMP_Text levelText;
    [SerializeField] int level = 1;
    [SerializeField] float speedChangeFactor;
    [SerializeField] GameObject imagesuccess;
    [SerializeField] GameObject imagefailure;


    void Start()
    {
        targetNumber = Random.Range(2, 9);
        numberDisplayUI.text = currentNumber.ToString();
        targetNumberUI.text = targetNumber.ToString();
        levelText.text = level.ToString();
        imagesuccess.SetActive(false);
        imagefailure.SetActive(false);
    }

    void Update()
    {
        elapsedTime = elapsedTime + Time.deltaTime;

        if (elapsedTime >= timePerNumber)
        {
            currentNumber = currentNumber + 1;
            numberDisplayUI.text = currentNumber.ToString();
            elapsedTime = 0;
        }

        if (currentNumber > targetNumber)
        {
            currentNumber = 0;
            targetNumber = Random.Range(2, 9);
            numberDisplayUI.text = currentNumber.ToString();
            targetNumberUI.text = targetNumber.ToString();
            level = 1;
            levelText.text = level.ToString();
            timePerNumber = 1;
            imagefailure.SetActive(true);
            Invoke("DeactivateBackground", 1);
        }

        if (currentNumber < targetNumber && Input.GetKeyDown(KeyCode.Space))
        {
            currentNumber = 0;
            targetNumber = Random.Range(2, 9);
            numberDisplayUI.text = currentNumber.ToString();
            targetNumberUI.text = targetNumber.ToString();
            level = 1;
            levelText.text = level.ToString();
            timePerNumber = 1;
            imagefailure.SetActive(true);
            Invoke("DeactivateBackground", 1);
        }

        if (currentNumber == targetNumber && Input.GetKeyDown(KeyCode.Space))
        {
            currentNumber = 0;
            targetNumber = Random.Range(2, 9);
            numberDisplayUI.text = currentNumber.ToString();
            targetNumberUI.text = targetNumber.ToString();
            level = level + 1;
            levelText.text = level.ToString();
            timePerNumber = timePerNumber / speedChangeFactor;
            imagesuccess.SetActive(true);
            Invoke("DeactivateBackground", 1);
        }
    }

    void DeactivateBackground()
    {
        imagefailure.SetActive(false);
        imagesuccess.SetActive(false);
    }
}
